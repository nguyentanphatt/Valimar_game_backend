// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Game {
  id              Int           @id @default(autoincrement())
  name            String
  link            String
  releaseDate     DateTime
  price           Float
  discountPrice   Float
  discountPercent Int
  gameId          String        @unique
  imageUrl        String
  genre           String
  developer       String
  physical        Boolean
  requirements    Requirement[]
  screenshots     Screenshot[]
  cartitem        CartItem[]
  GameKey         GameKey[]
}

model Requirement {
  id        Int     @id @default(autoincrement())
  gameId    Int
  type      String
  os        String?
  processor String?
  memory    String?
  graphics  String?
  directX   String?
  network   String?
  storage   String?
  game      Game    @relation(fields: [gameId], references: [id])
}

model Screenshot {
  id     Int    @id @default(autoincrement())
  gameId Int
  image  String
  game   Game   @relation(fields: [gameId], references: [id])
}

model User {
  id       Int      @id @default(autoincrement())
  name     String?
  email    String   @unique
  password String?
  createAt DateTime @default(now())
  plan     String   @default("free")
  image    String?
  cart     Cart[]
}

model Cart {
  id               Int        @id @default(autoincrement())
  createDate       DateTime
  completedDate    DateTime?
  status           String     @default("pending")
  promocode        String?
  deliveryLocation String?
  userId           Int
  user             User       @relation(fields: [userId], references: [id])
  cartitem         CartItem[]
}

model CartItem {
  id       Int     @id @default(autoincrement())
  cartId   Int
  gameId   Int
  physical Boolean
  cart     Cart    @relation(fields: [cartId], references: [id])
  game     Game    @relation(fields: [gameId], references: [id])
}

model GameKey {
  id     Int    @id @default(autoincrement())
  gameId Int
  key    String
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Promocode {
  id Int @id @default(autoincrement())
  promocode String
  percent Float
  validDate DateTime
}
